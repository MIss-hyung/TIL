* 코드가 존재하리라
* 나쁜 코드
* 나쁜 코드로 치르는 대가
    나쁜 코드가 쌓일수록 팀 생산성은 떨어진다.
    태도 : 좋은 코드를 사수하는 일은 바로 우리 프로그래머들의 책임이다.
    원초적 난제
    꺠끗한 코드라는 예술? : '코드 감각'이 있으면 좋은 코드와 나쁜 코드를 구분한다.
        바야네 스트롭스트룹 - 의존성을 최대한 줄여야 유지보수가 쉬워진다. / 오류처리
        그래디 부치 - 꺠끗한 코드는 단순하고 직접적이다. / 가독성
        큰 데이브 토마스 - API는 명확하며 최소로 줄였다. 깨끗한 코드란 다른 사람이 고치기 쉽다.
        마이클 페더스 - 주의 깊게 짰다. 코드를 주의깊게 짜는 방법
        론 제프리스 - 중복이 없다.
                    - 모든 프로그램이 아주 유사한 요소로 이뤄진다는 사실
                    - 추상 메서드나 추상 클래스를 만들어 실제 구현을 감싼다.
                - 중복 줄이기, 표현력 높이기, 초반부터 간단한 추상화 고려하기.
        워드 커닝햄 - 꺠끗한 코드는 읽으면서 놀랄 일이 없어야 한다.
        저자의 생각 - 읽기 쉬운 코드가 매우 중요하다.
* 보이스카우트 규칙
    시간이 지나도 언제나 꺠끗하게 유지해야 한다.
    변수 이름 하나를 개선하고, 조금 긴 함수 하나를 분할하고, 약간의 중복을 제거하고, 복잡한 if문 하나를 정리하면 충분
* 프리퀄과 원칙
* 결론  : 연습해 연습


