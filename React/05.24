React의 Component (컴포넌트) 
-> 리액트에서 최소한의 단위. 기능을 단위별로 캡슐화 하며, 이 작은 컴포넌트들이 모여, 유기적으로 잘 연결되고 동작될때 좋은 좋은앱

함수 컴포넌트 기본 구조
함수형 컴포넌트는 잘못된 말, 함수형이라고 하면 순수 함수를 다루는 프로그래밍 기법을 뜻하는데 리액트에서 함수 컴포넌트는 구현에 따라 순수하거나 순수하지 않을 수 있기 때문이다.
import React from “react”;

const MyName = ({ name }) => { 
	return <div>하이루 나는 {name}입니다 </div>;
};

MyName.defaultProps = {
	name : “경아" ,
};
export default MyName;
→ ({ name })은 객체 형태의 파라미터로 비구조화 할당 이라고 부른다. ES6에 추가된 문법이며 객체 내부에 있는 name 값을 props로 받아와서 사용하고 있다. 함수 컴포넌트가 초기 마운트 속도가 클래스형보다는 미세하게 빠르고, 코드 가독성이 좋고 직관적. 메모리 자원을 덜 사용한다는 장점이 있다.
단점 : state와 life cycle을 사용 할 수 없다 but hook(훅)이 도입되면서 해결!

클래스형 컴포넌트 기본 구조
class UserComponent extends Component{
render(){
	return(
	<div className=”container”> // JSX라는 자바스크립트 확장 문법임!!! 
	컴포넌트 내용 작성부분
	</div>
)
}
}
class 컴포넌트를 사용할 경우 꼭 render 메소드를 사용해야하고, JSX를 return 해주어야 한다.

⇒ 컴포넌트를 다 작성 후 앱을 실행할 때, React API는 이 JSX 문법을 순수 자바스크립트로 컴파일을 한다.

Props
-> 데이터를 다룰때 쓴다. 부모 컴포넌트가 자식 컴포넌트한테 값을 전달할때 사용하며 읽기 전용이다. 그러므로 컴포넌트 자체에서 props를 수적해서는 안되며, 반드시 순수 함수처럼 동작해야한다.

State
리액트에서 데이터를 다룰때 쓴다. 컴포넌트 내부에서 바꿀 수 없는값
props 같은 경우 값을 바꾸려면 부모 컴포넌트에서 직접 변경(자식 컴포넌트는 읽기전용)을 해야하지만, state는 자식 컴포넌트 내에서 값에 변화를 줄 수 있다.
변경, 변화가 일어날때는 언제나 setState라는 함수를 꼭 사용해야한다.



https://kyung-a.tistory.com/17
--------------
` ⇒ backtick문자, javascript 템플릿 리터럴
마크다운에서 코드를 강조 하는데 쓰이기도 하는 문자이다. 
javascript에서 backtick문자를 사용하여 표현한것을 템플릿 리터럴이라고 한다.
이렇게 사용하면, 두가지 기능 1) 줄바꿈 쉽게 가능 2) 문자열 내부에 표현식을 포함 가능
ex) console.log(“fifteen is “ + (a + b) + “and\nnot” + (2* a + b) + “.”);
console.log(`fifteen is ${a + b} and not ${2 * a + b}.`);
-------------
reacts,s DOM API를 이용한 컴포넌트 제어 대신 ref라는 기능을 제공한다.

------------
React에는 상태 관련 로직을 컴포넌트에서 공유하는 두 가지 전통적인 방법이 있는데 
render props 2) 고차 컴포넌트
-> hook을 사용하여 트리에 컴포넌트를 더하지 않고 위의 문제를 해결하는 방법을 보겠다.


